// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// remark：不支持多文件原因 https://github.com/prisma/prisma/issues/2377
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  uid       String   @unique @default(uuid())
  phone     String   @unique @db.VarChar(20)
  email     String?  @unique
  name      String?  @db.VarChar(16)
  avatar    String?
  password  String   @db.Char(60)
  sex       Int      @default(1) @db.TinyInt // 1: 男 2: 女
  status    Int      @default(1) @db.TinyInt // 1: 正常 0: 禁用
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  teams             Team[] // 一个用户可以创建多个团队(外键关联)
  created_tasks     Task[]    @relation("creator")
  reviewed_tasks    Task[]    @relation("reviewer")
  edit_task_logs    TaskLog[] @relation("log_editor")
  receive_task_logs TaskLog[] @relation("log_receiver")
}

model Team {
  id         Int      @id @default(autoincrement())
  team_id    String   @unique @default(cuid()) @db.VarChar(30) // 团队id
  name       String   @db.VarChar(16)
  members    String?  @db.VarChar(255) // 逗号分隔的用户uid
  status     Int      @default(1) @db.TinyInt // 1: 正常 0: 禁用
  creator_id String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  creator       User          @relation(fields: [creator_id], references: [uid]) // 定义外键，creator外键名
  projects      Project[]
  process_types ProcessType[]
}

model Project {
  id         Int      @id @default(autoincrement())
  project_id String   @unique @default(cuid()) @db.VarChar(30) // 项目id
  name       String   @db.VarChar(20)
  status     Int      @default(1) @db.TinyInt // 1: 正常 0: 禁用 2:表示归档
  team_id    String   @db.VarChar(30) // 团队id
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  team     Team      @relation(fields: [team_id], references: [team_id])
  tasks    Task[]
  taskLogs TaskLog[]
}

model Task {
  id              Int      @id @default(autoincrement())
  task_id         String   @unique @default(cuid()) @db.VarChar(30) // 任务id
  title           String   @db.VarChar(50)
  content         String?  @db.VarChar(255) // 详情链接
  status          Int      @default(1) @db.TinyInt // 1: 进行中 0: 禁用 2: 审核中 3: 审核不通过 4: 审核通过
  project_id      String   @db.VarChar(30) // 项目id
  creator_id      String // 创建者id
  process_type_id Int      @db.Int // 流程类型id
  priority        Int?     @default(4) @db.TinyInt // 0: p0 1: p1 2: p2 3: p3 4: p4
  start_time      Int
  end_time        Int
  done_task_time  Int? // 任务完成时间
  review_time     Int? // 任务审核时间 (具体配合status字段，分审核不通过时间和通过时间)
  reviewer_id     String // 审核人id
  owner_ids       String?  @db.VarChar(255) // 负责人id
  createdAt       DateTime @default(now())
  subtask_ids     String?  @db.VarChar(255) // 子任务id
  updatedAt       DateTime @updatedAt

  creator      User        @relation("creator", fields: [creator_id], references: [uid])
  reviewer     User        @relation("reviewer", fields: [reviewer_id], references: [uid])
  project      Project     @relation(fields: [project_id], references: [project_id])
  process_type ProcessType @relation(fields: [process_type_id], references: [id])

  task_logs TaskLog[]
}

model TaskLog {
  id          Int      @id @default(autoincrement())
  task_id     String   @db.VarChar(30)
  project_id  String   @db.VarChar(30) // 项目id
  type        Int      @db.TinyInt // 任务日志类型 0: 删除 1: 创建 2: 修改
  status      Int      @default(0) @db.TinyInt // 0 未读， 1 已读
  editor_id   String // 编辑者id
  receiver_id String // 接收者
  createdAt   DateTime @default(now())

  editor   User    @relation("log_editor", fields: [editor_id], references: [uid])
  receiver User    @relation("log_receiver", fields: [receiver_id], references: [uid])
  task     Task    @relation(fields: [task_id], references: [task_id])
  project  Project @relation(fields: [project_id], references: [project_id])
}

model ProcessType {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(10)
  status    Int      @default(1) @db.TinyInt // 1: 正常 0: 禁用
  team_id   String   @db.VarChar(30) // 团队id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  team  Team   @relation(fields: [team_id], references: [team_id])
  tasks Task[]
}
